{"version":3,"file":"whr.cjs.development.js","sources":["../src/player-day.ts","../src/player.ts","../src/game.ts","../src/whr.ts"],"sourcesContent":["import Player from './player'\nimport Game from './game';\nimport { UnstableRatingException } from './whr';\n\nexport default class PlayerDay {\n    // attr_accessor :won_games, :lost_games, :name, :day, :player, :r, :is_first_day, :uncertainty\n    player: Player\n    day: number\n    isFirstDay: boolean\n    wonGames: Game[]\n    lostGames: Game[]\n    _wonGameTerms: number[][] | null\n    _lostGameTerms: number[][] | null\n    uncertainty: null | number\n    r!: number\n\n    // TODO: Find out what day type is\n    constructor(player: Player, day: number) {\n        this.player = player\n        this.day = day\n        this.isFirstDay = false\n        this.wonGames = []\n        this.lostGames = []\n        this._wonGameTerms = null\n        this._lostGameTerms = null\n        this.uncertainty = null\n    }\n\n    set gamma(gamma: number) {\n        this.r = Math.log(gamma)\n    }\n\n    get gamma(): number {\n        return Math.exp(this.r)\n    }\n\n    set elo(elo: number) {\n        this.r = elo * (Math.log(10) / 400.0)\n    }\n\n    get elo(): number {\n        return (this.r * 400.0) / (Math.log(10))\n    }\n\n    get logLikelihood(): number {\n        return 0\n    }\n\n    clearGameTermsCache() {\n        this._wonGameTerms = null\n        this._lostGameTerms = null\n    }\n\n    get wonGameTerms() {\n        if (!this._wonGameTerms) {\n            this._wonGameTerms = this.wonGames.map((g: Game) => {\n                let otherGamma = g.opponentsAdjustedGamma(this.player)\n                if (otherGamma === 0 || isNaN(otherGamma) || !isFinite(otherGamma)) {\n                    throw new UnstableRatingException(`otherGamma (${g.opponent(this.player).inspect}) = ${otherGamma}`)\n                }\n                return [1.0, 0.0, 1.0, otherGamma]\n            })\n            if (this.isFirstDay) {\n                this._wonGameTerms!.push([1.0, 0.0, 1.0, 1.0]) // win against virtual player ranked with gamma = 1.0\n            }\n        }\n        return this._wonGameTerms\n    }\n\n    get lostGameTerms() {\n        if (!this._lostGameTerms) {\n            this._lostGameTerms = this.lostGames.map((g: Game) => {\n                let otherGamma = g.opponentsAdjustedGamma(this.player)\n                if (otherGamma === 0 || isNaN(otherGamma) || !isFinite(otherGamma)) {\n                    console.log(`otherGamma (${g.opponent(this.player).inspect}) = ${otherGamma}`)\n                }\n                return [0.0, otherGamma, 1.0, otherGamma]\n            })\n            if (this.isFirstDay) {\n                this._lostGameTerms!.push([0.0, 1.0, 1.0, 1.0]) // loss against virtual player ranked with gamma = 1.0\n            }\n        }\n        return this._lostGameTerms\n    }\n\n    get logLikelihoodSecondDerivative(): number {\n        let sum = 0.0\n        let terms = this.wonGameTerms!.concat(this.lostGameTerms)\n        terms.forEach((term: number[]) => {\n            let c = term[2], d = term[3]\n            sum += (c * d) / ((c * this.gamma + d) ** 2.0)\n        })\n        if(isNaN(this.gamma)) throw new UnstableRatingException(`Gamma cannot be NaN`)\n        if(isNaN(sum)) throw new UnstableRatingException(`Sum cannot be NaN`)\n        return -1 * this.gamma * sum\n    }\n\n    get logLikelihoodDerivative(): number {\n        let tally = 0\n        let terms = this.wonGameTerms!.concat(this.lostGameTerms)\n        terms.forEach((term: number[]) => {\n            let c = term[2], d = term[3]\n            tally += c / (c * this.gamma + d)\n        })\n        return this.wonGameTerms!.length - this.gamma * tally\n    }\n\n    addGame(game: Game) {\n        if ((game.winner == \"W\" && game.whitePlayer === this.player) ||\n            (game.winner == \"B\" && game.blackPlayer === this.player)) {\n            this.wonGames.push(game)\n        } else {\n            this.lostGames.push(game)\n        }\n    }\n\n    updateBy1DNewtonsMethod() {\n        let dlogp = this.logLikelihoodDerivative\n        let d2logp = this.logLikelihoodSecondDerivative\n        let dr = (dlogp / d2logp)\n        let new_r = this.r - dr\n        this.r = new_r\n    }\n\n}","import { UnstableRatingException } from './whr'\nimport PlayerDay from './player-day'\nimport Game from './game'\nimport { Config } from './whr'\n\n\nexport default class Player {\n    name: string\n    anchor_gamma: any\n    days: PlayerDay[]\n    debug: boolean | undefined\n    w2: number\n    //:days, :w2, :debug, :id\n    constructor(name: string, config: Config) {\n        this.name = name\n        this.anchor_gamma\n        this.days = []\n        this.debug = config.debug\n        this.w2 = (Math.sqrt(config.w2!) * Math.log(10) / 400) ** 2 // Convert from elo^2 to r^2\n    }\n\n    get inspect(): string {\n        return `<Player:${Object.entries(this).map((arr: any[]) => `${arr[0]}=${arr[1]}`).join(',')}>`\n    }\n\n    get logLikelihood(): number {\n        let sum = 0.0\n        let sigma2: number[] = this.computeSigma2()\n        let days = this.days\n        let n = days.length\n\n        for (let i = 0; i < n; i++) {\n            let prior = 0\n            if (i < n) {\n                let rd = days[i].r - days[i + 1].r\n                prior += (1 / (Math.sqrt(2 * Math.PI * sigma2[i]))) * Math.exp(-(rd ** 2) / 2 * sigma2[i])\n            }\n            if (i > 0) {\n                let rd = days[i].r - days[i - 1].r\n                prior += (1 / (Math.sqrt(2 * Math.PI * sigma2[i - 1]))) * Math.exp(-(rd ** 2) / 2 * sigma2[i - 1])\n            }\n            if (prior == 0) {\n                sum += days[i].logLikelihood\n            } else {\n                if (!isFinite(days[i].logLikelihood) || !isFinite(Math.log(prior))) {\n                    throw new UnstableRatingException(`Infinity at ${this.inspect}: ${days[i].logLikelihood} + ${Math.log(prior)}: prior = ${prior}, days = ${JSON.stringify(this.days)}`)\n                }\n                sum += days[i].logLikelihood + Math.log(prior)\n            }\n        }\n        return sum\n    }\n\n    hessian(days: PlayerDay[], sigma2: number[]): number[][] {\n        let n = days.length\n        // Create an n by n matrix\n        let matrix = new Array(n).fill(new Array(n).fill(null))\n        return matrix.map((_y: any, row: number) => _y.map((_x: any, col: number) => {\n            if (row == col) {\n                let prior = 0\n                if (row < (n - 1)) prior += -1.0 / sigma2[row]\n                if (row > 0) prior += -1.0 / sigma2[row - 1]\n                return days[row].logLikelihoodSecondDerivative + prior - 0.001\n            } else if (row == col - 1) {\n                return 1.0 / sigma2[row]\n            } else if (row == col + 1) {\n                return 1.0 / sigma2[col]\n            } else {\n                return 0\n            }\n        }))\n    }\n\n    gradient(r: number[], days: PlayerDay[], sigma2: number[]): number[] {\n        let g: number[] = []\n        let n = this.days.length\n        days.forEach((day, idx) => {\n            let prior = 0\n            if (idx < (n - 1)) prior += -(r[idx] - r[idx + 1]) / sigma2[idx]\n            if (idx > 0) prior += -(r[idx] - r[idx - 1]) / sigma2[idx - 1]\n            if (this.debug) console.log(`g[${idx}] = ${day.logLikelihoodDerivative} + ${prior}`)\n            g.push(day.logLikelihoodDerivative + prior)\n        })\n        return g\n    }\n\n    runOneNewtonIteration(): void {\n        this.days.forEach(day => {\n            day.clearGameTermsCache()\n        })\n\n        if (this.days.length == 1) {\n            this.days[0].updateBy1DNewtonsMethod()\n        } else if (this.days.length > 1) {\n            this.updateByNDimNewton()\n        }\n    }\n\n    computeSigma2(): number[] {\n        let sigma2: number[] = []\n        this.days.forEach((d1, i) => {\n            if (i == 0) return\n            let d2 = this.days[i - 1]\n            sigma2.push(Math.abs(d2.day - d1.day) * this.w2)\n        })\n        return sigma2\n    }\n\n\n    updateByNDimNewton() {\n        // r\n        let r = this.days.map(day => day.r)\n    \n        if (this.debug) {\n            console.log(`Updating ${this.inspect}`)\n            this.days.forEach(day => {\n                console.log(`day[${day.day}] r = ${day.r}`)\n                console.log(`day[${day.day}] win terms = ${day.wonGameTerms}`)\n                console.log(`day[${day.day}] win games = ${day.wonGames}`)\n                console.log(`day[${day.day}] lose terms = ${day.lostGameTerms}`)\n                console.log(`day[${day.day}] lost games = ${day.lostGames}`)\n                console.log(`day[${day.day}] log(p) = ${day.logLikelihood}`)\n                console.log(`day[${day.day}] dlp = ${day.logLikelihoodDerivative}`)\n                console.log(`day[${day.day}] dlp2 = ${day.logLikelihoodSecondDerivative}`)\n            })\n        }\n    \n        // sigma squared (used in the prior)\n        let sigma2 = this.computeSigma2()\n    \n        let h = this.hessian(this.days, sigma2)\n        let g = this.gradient(r, this.days, sigma2)\n    \n        let a: number[] = []\n        let d = [h[0][0]]\n        let b = [h[0][1]]\n    \n        let n = r.length\n        for(let i = 1; i < n; i++) {\n            a[i] = h[i][i-1] / d[i-1]\n            d[i] = h[i][i] - a[i] * b[i-1]\n            b[i] = h[i][i+1]\n        }\n    \n        let y: number[] = [g[0]]\n        for(let i = 1; i < n; i++) {\n            y[i] = g[i] - a[i] * y[i-1]\n        }\n    \n        let x: number[] = []\n        x[n-1] = y[n-1] / d[n-1]\n        for(let i = n-2; i >= 0; i--){\n            x[i] = (y[i] - b[i] * x[i+1]) / d[i]\n        }\n\n        // JS Array.zip implementation\n        let newR = a.map((e, i) => [e, x[i]]).map(i => i[0] - i[1])\n    \n        newR.forEach(r => {\n            if (r > 650)\n                throw new UnstableRatingException(`Unstable r (${newR}) on player ${this.inspect}`)\n        })\n    \n        if (this.debug) {\n            console.log(`Hessian = ${h}`)\n            console.log(`gradient = ${g}`)\n            console.log(`a = ${a}`)\n            console.log(`d = ${d}`)\n            console.log(`b = ${b}`)\n            console.log(`y = ${y}`)\n            console.log(`x = ${x}`)\n            console.log(`${this.inspect} (${r}) => (${newR})`)\n        }\n    \n        this.days.forEach((day,idx) => {\n            day.r = day.r - x[idx]\n        })\n    }\n\n    get covariance() {\n      let r = this.days.map(day => day.r)\n    \n      let sigma2 = this.computeSigma2()\n      let h = this.hessian(this.days, sigma2)\n      //let g = this.gradient(r, this.days, sigma2)\n    \n      let n = this.days.length\n    \n      let a: number[] = []\n      let d = [h[0][0]]\n      let b = [h[0][1]]\n    \n      n = r.length\n      for(let i = 1; i < n; i++) {\n        a[i] = h[i][i-1] / d[i-1]\n        d[i] = h[i][i] - a[i] * b[i-1]\n        b[i] = h[i][i+1]\n      }\n\n      let dp = []\n      dp[n-1] = h[n-1][n-1]    \n      let bp = []\n      bp[n-1] = h[n-1][n-2]\n      let ap = []\n      for(let i = n - 2; i >= 0; i--) {\n        ap[i] = h[i][i+1] / dp[i+1]\n        dp[i] = h[i][i] - ap[i]*bp[i+1]\n        bp[i] = h[i][i-1]\n      }\n    \n      let v: number[] = []\n      for(let i = 0; i < n-1; i++) {\n        v[i] = dp[i+1]/(b[i]*bp[i+1] - d[i]*dp[i+1])\n      }\n      v[n-1] = -1/d[n-1]\n    \n      let matrix = new Array(n).fill(new Array(n).fill(null))\n      return matrix.map((_y: any, row: number) => _y.map((_x: any, col: number) => {\n        if(row == col)\n            return v[row]\n        else if(row == col-1)\n            return -1*a[col]*v[col]\n        else\n          return 0\n      }))\n    }\n    \n    updateUncertainty() {\n      if(this.days.length > 0) {\n        let c = this.covariance\n        let u = this.days.map((_e,i) => c[i][i])\n        let zipped =  this.days.map((d, i) => [d, u[i]]).map(e => e[0].uncertainty = e[1])\n        return zipped\n      }\n      else\n        return 5\n    }\n\n    addGame(game: Game): void {\n        let lastDay = this.days.slice(-1)[0]\n        if(!lastDay || lastDay.day != game.day) {\n            let newPday = new PlayerDay(this, game.day)\n            if(this.days.length == 0) {\n                newPday.isFirstDay = true\n                newPday.gamma = 1\n            } else {\n                newPday.gamma = lastDay.gamma\n            }\n            lastDay = newPday\n            this.days.push(newPday)\n        }\n        if (game.whitePlayer === this) {\n            game.wpd = lastDay\n        } else {\n            game.bpd = lastDay\n        }\n        lastDay.addGame(game)\n    }\n\n}","import Player from './player'\nimport { UnstableRatingException, RatingException } from './whr'\nimport PlayerDay from './player-day'\n\nexport default class Game {\n\n    day: number\n    whitePlayer: Player\n    blackPlayer: Player\n    winner: string\n    _handicap: number | Function\n    wpd: PlayerDay | null\n    bpd: PlayerDay | null\n    extras: object\n\n    constructor(black: Player, white: Player, winner: string, timeStep: number, handicap: number | Function, extras?: object) {\n        this.day = timeStep\n        this.whitePlayer = white\n        this.blackPlayer = black\n        this.winner = winner\n        this._handicap = handicap || 0\n\n        this.wpd = null\n        this.bpd = null\n        this.extras = extras || {}\n    }\n\n    get inspect(): string {\n      return `<Game:${Object.entries(this).map((arr: any[]) => `${arr[0]}=${arr[1]}`).join(',')}>`\n    }\n\n    get handicap(): number {\n        if(this._handicap instanceof Function) return this._handicap()\n        return this._handicap\n    }\n\n    opponentsAdjustedGamma(player: Player) {\n      let blackAdvantage = this.handicap\n      let opponentElo\n      if (player === this.whitePlayer)\n        opponentElo = this.bpd!.elo + blackAdvantage\n      else if (player === this.blackPlayer)\n        opponentElo = this.wpd!.elo - blackAdvantage\n      else\n        throw new RatingException(`No opponent for ${player.name}, since they're not in this game: ${this}.`)\n      let rval = 10**(opponentElo/400.0)\n      if (rval == 0 || !isFinite(rval) || isNaN(rval))\n        throw new UnstableRatingException(`Bad adjusted gamma: ${this}`)\n      return rval\n    }\n\n    opponent(player: Player) {\n        if(player == this.whitePlayer)\n            return this.blackPlayer\n        return this.whitePlayer\n    }\n\n    get predictionScore(): number {\n      if (this.whiteWinProbability == 0.5)\n        return 0.5\n      else\n        return ((this.winner == \"W\" && this.whiteWinProbability > 0.5) || (this.winner == \"B\" && this.whiteWinProbability < 0.5)) ? 1.0 : 0.0\n    }\n\n    // This is the Bradley-Terry Model\n    get whiteWinProbability() {\n      return this.wpd!.gamma/(this.wpd!.gamma + this.opponentsAdjustedGamma(this.whitePlayer))\n    }\n  \n    get blackWinProbability() {\n        return this.bpd!.gamma/(this.bpd!.gamma + this.opponentsAdjustedGamma(this.blackPlayer))\n    }\n}","import Player from './player'\nimport Game from './game'\nimport PlayerDay from './player-day'\n\nexport interface Config {\n    debug?: boolean\n    w2?: number\n    players?: Map<string, Player>\n    games?: Array<Game>\n}\n\nexport class RatingException extends Error {}\n\nexport class UnstableRatingException extends RatingException {}\n\n/**\n * Base class for WHR.\n */\nexport default class WholeHistoryRating {\n    config: Config\n    players: Map<string, Player>\n    games: Game[]\n    constructor(config?: Config) {\n        this.config    = config          || {}\n        this.config.w2 = this.config.w2      || 300.0\n        this.games     = this.config.games   || []\n        this.players   = this.config.players || new Map<string, Player>()\n    }\n\n    get inspect() {\n        return this\n    }\n\n    printOrderedRatings() {\n        let players = Array.from(this.players.values()).filter(p => p.days.length > 0)\n        players.forEach(p => console.log(`${p.name} => ${p.days.map(day => day.elo).join(', ')}`))\n    }\n\n    logLikelihood(): number {\n        let score = 0.0\n        Object.values(this.players).forEach((p: Player) => {\n        if(p.days.length > 0)\n            score += p.logLikelihood\n        })\n        return score\n    }\n\n    playerByName(name: string): Player {\n        let player = this.players.get(name)\n        if(!player) {\n            player = new Player(name, this.config)\n            this.players.set(name, player)\n        }\n        return player\n    }\n    \n    ratingsForPlayer(name: string) {\n        let player: Player = this.playerByName(name)\n        return player.days.map((d: PlayerDay) => [d.day, Math.round(d.elo), Math.round(d.uncertainty!*100)])\n    }\n  \n    setupGame(black: string, white: string, winner: string, timeStep: number, handicap: number, extras = {}) {\n        // Avoid self-played games (no info)\n        if (black == white) {\n            throw new RatingException(\"Invalid game, player cannot play with themself\")\n        }\n        let whitePlayer = this.playerByName(white)\n        let blackPlayer = this.playerByName(black)\n\n        return new Game(blackPlayer, whitePlayer, winner, timeStep, handicap, extras)\n    }\n  \n    createGame(black: string, white: string, winner: string, timeStep: number, handicap: number, extras: object = {}) {\n        const game: Game = this.setupGame(black, white, winner, timeStep, handicap, extras)\n        return this.addGame(game)\n    }\n\n    addGame(game: Game) {\n        game.whitePlayer.addGame(game)\n        game.blackPlayer.addGame(game)\n        if(!game.bpd) {\n            throw new RatingException(`Bad game: ${game.inspect}`)\n        }\n        this.games.push(game)\n        return game\n    }\n  \n    iterate(count: number): void {\n        for(let i = 0; i < count; i++) {\n            this.runOneIteration()\n        }\n        this.players.forEach((p: Player) => p.updateUncertainty())\n    }\n\n    runOneIteration(): void {\n        this.players.forEach((p: Player) => p.runOneNewtonIteration())\n    }\n}"],"names":["PlayerDay","player","day","isFirstDay","wonGames","lostGames","_wonGameTerms","_lostGameTerms","uncertainty","clearGameTermsCache","addGame","game","winner","whitePlayer","blackPlayer","push","updateBy1DNewtonsMethod","dlogp","logLikelihoodDerivative","d2logp","logLikelihoodSecondDerivative","dr","new_r","r","gamma","Math","log","exp","elo","map","g","otherGamma","opponentsAdjustedGamma","isNaN","isFinite","UnstableRatingException","opponent","inspect","console","sum","terms","wonGameTerms","concat","lostGameTerms","forEach","term","c","d","tally","length","Player","name","config","days","debug","w2","sqrt","hessian","sigma2","n","matrix","Array","fill","_y","row","_x","col","prior","gradient","idx","runOneNewtonIteration","updateByNDimNewton","computeSigma2","d1","i","d2","abs","logLikelihood","h","a","b","y","x","newR","e","updateUncertainty","covariance","u","_e","zipped","lastDay","slice","newPday","wpd","bpd","Object","entries","arr","join","rd","PI","JSON","stringify","dp","bp","ap","v","Game","black","white","timeStep","handicap","extras","_handicap","blackAdvantage","opponentElo","RatingException","rval","Function","whiteWinProbability","Error","WholeHistoryRating","games","players","Map","printOrderedRatings","from","values","filter","p","score","playerByName","get","set","ratingsForPlayer","round","setupGame","createGame","iterate","count","runOneIteration"],"mappings":"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"}