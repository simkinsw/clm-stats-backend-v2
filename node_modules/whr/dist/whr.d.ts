import Player from './player';
import Game from './game';
export interface Config {
    debug?: boolean;
    w2?: number;
    players?: Map<string, Player>;
    games?: Array<Game>;
}
export declare class RatingException extends Error {
}
export declare class UnstableRatingException extends RatingException {
}
/**
 * Base class for WHR.
 */
export default class WholeHistoryRating {
    config: Config;
    players: Map<string, Player>;
    games: Game[];
    constructor(config?: Config);
    get inspect(): this;
    printOrderedRatings(): void;
    logLikelihood(): number;
    playerByName(name: string): Player;
    ratingsForPlayer(name: string): number[][];
    setupGame(black: string, white: string, winner: string, timeStep: number, handicap: number, extras?: {}): Game;
    createGame(black: string, white: string, winner: string, timeStep: number, handicap: number, extras?: object): Game;
    addGame(game: Game): Game;
    iterate(count: number): void;
    runOneIteration(): void;
}
