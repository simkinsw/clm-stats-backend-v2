import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { LambdaServiceException as __BaseException } from "./LambdaServiceException";
export class InvalidParameterValueException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterValueException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);
        this.Type = opts.Type;
    }
}
export class PolicyLengthExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "PolicyLengthExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "PolicyLengthExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PolicyLengthExceededException.prototype);
        this.Type = opts.Type;
    }
}
export class PreconditionFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "PreconditionFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "PreconditionFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PreconditionFailedException.prototype);
        this.Type = opts.Type;
    }
}
export class ResourceConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceConflictException.prototype);
        this.Type = opts.Type;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class ServiceException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export var ThrottleReason;
(function (ThrottleReason) {
    ThrottleReason["CallerRateLimitExceeded"] = "CallerRateLimitExceeded";
    ThrottleReason["ConcurrentInvocationLimitExceeded"] = "ConcurrentInvocationLimitExceeded";
    ThrottleReason["ConcurrentSnapshotCreateLimitExceeded"] = "ConcurrentSnapshotCreateLimitExceeded";
    ThrottleReason["FunctionInvocationRateLimitExceeded"] = "FunctionInvocationRateLimitExceeded";
    ThrottleReason["ReservedFunctionConcurrentInvocationLimitExceeded"] = "ReservedFunctionConcurrentInvocationLimitExceeded";
    ThrottleReason["ReservedFunctionInvocationRateLimitExceeded"] = "ReservedFunctionInvocationRateLimitExceeded";
})(ThrottleReason || (ThrottleReason = {}));
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.retryAfterSeconds = opts.retryAfterSeconds;
        this.Type = opts.Type;
        this.Reason = opts.Reason;
    }
}
export var FunctionUrlAuthType;
(function (FunctionUrlAuthType) {
    FunctionUrlAuthType["AWS_IAM"] = "AWS_IAM";
    FunctionUrlAuthType["NONE"] = "NONE";
})(FunctionUrlAuthType || (FunctionUrlAuthType = {}));
export var Architecture;
(function (Architecture) {
    Architecture["arm64"] = "arm64";
    Architecture["x86_64"] = "x86_64";
})(Architecture || (Architecture = {}));
export var CodeSigningPolicy;
(function (CodeSigningPolicy) {
    CodeSigningPolicy["Enforce"] = "Enforce";
    CodeSigningPolicy["Warn"] = "Warn";
})(CodeSigningPolicy || (CodeSigningPolicy = {}));
export var FullDocument;
(function (FullDocument) {
    FullDocument["Default"] = "Default";
    FullDocument["UpdateLookup"] = "UpdateLookup";
})(FullDocument || (FullDocument = {}));
export var FunctionResponseType;
(function (FunctionResponseType) {
    FunctionResponseType["ReportBatchItemFailures"] = "ReportBatchItemFailures";
})(FunctionResponseType || (FunctionResponseType = {}));
export var EndPointType;
(function (EndPointType) {
    EndPointType["KAFKA_BOOTSTRAP_SERVERS"] = "KAFKA_BOOTSTRAP_SERVERS";
})(EndPointType || (EndPointType = {}));
export var SourceAccessType;
(function (SourceAccessType) {
    SourceAccessType["BASIC_AUTH"] = "BASIC_AUTH";
    SourceAccessType["CLIENT_CERTIFICATE_TLS_AUTH"] = "CLIENT_CERTIFICATE_TLS_AUTH";
    SourceAccessType["SASL_SCRAM_256_AUTH"] = "SASL_SCRAM_256_AUTH";
    SourceAccessType["SASL_SCRAM_512_AUTH"] = "SASL_SCRAM_512_AUTH";
    SourceAccessType["SERVER_ROOT_CA_CERTIFICATE"] = "SERVER_ROOT_CA_CERTIFICATE";
    SourceAccessType["VIRTUAL_HOST"] = "VIRTUAL_HOST";
    SourceAccessType["VPC_SECURITY_GROUP"] = "VPC_SECURITY_GROUP";
    SourceAccessType["VPC_SUBNET"] = "VPC_SUBNET";
})(SourceAccessType || (SourceAccessType = {}));
export var EventSourcePosition;
(function (EventSourcePosition) {
    EventSourcePosition["AT_TIMESTAMP"] = "AT_TIMESTAMP";
    EventSourcePosition["LATEST"] = "LATEST";
    EventSourcePosition["TRIM_HORIZON"] = "TRIM_HORIZON";
})(EventSourcePosition || (EventSourcePosition = {}));
export class CodeSigningConfigNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "CodeSigningConfigNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeSigningConfigNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeSigningConfigNotFoundException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class CodeStorageExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "CodeStorageExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeStorageExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeStorageExceededException.prototype);
        this.Type = opts.Type;
    }
}
export class CodeVerificationFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "CodeVerificationFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeVerificationFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeVerificationFailedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export var PackageType;
(function (PackageType) {
    PackageType["Image"] = "Image";
    PackageType["Zip"] = "Zip";
})(PackageType || (PackageType = {}));
export var Runtime;
(function (Runtime) {
    Runtime["dotnet6"] = "dotnet6";
    Runtime["dotnetcore10"] = "dotnetcore1.0";
    Runtime["dotnetcore20"] = "dotnetcore2.0";
    Runtime["dotnetcore21"] = "dotnetcore2.1";
    Runtime["dotnetcore31"] = "dotnetcore3.1";
    Runtime["go1x"] = "go1.x";
    Runtime["java11"] = "java11";
    Runtime["java8"] = "java8";
    Runtime["java8al2"] = "java8.al2";
    Runtime["nodejs"] = "nodejs";
    Runtime["nodejs10x"] = "nodejs10.x";
    Runtime["nodejs12x"] = "nodejs12.x";
    Runtime["nodejs14x"] = "nodejs14.x";
    Runtime["nodejs16x"] = "nodejs16.x";
    Runtime["nodejs18x"] = "nodejs18.x";
    Runtime["nodejs43"] = "nodejs4.3";
    Runtime["nodejs43edge"] = "nodejs4.3-edge";
    Runtime["nodejs610"] = "nodejs6.10";
    Runtime["nodejs810"] = "nodejs8.10";
    Runtime["provided"] = "provided";
    Runtime["providedal2"] = "provided.al2";
    Runtime["python27"] = "python2.7";
    Runtime["python36"] = "python3.6";
    Runtime["python37"] = "python3.7";
    Runtime["python38"] = "python3.8";
    Runtime["python39"] = "python3.9";
    Runtime["ruby25"] = "ruby2.5";
    Runtime["ruby27"] = "ruby2.7";
})(Runtime || (Runtime = {}));
export var SnapStartApplyOn;
(function (SnapStartApplyOn) {
    SnapStartApplyOn["None"] = "None";
    SnapStartApplyOn["PublishedVersions"] = "PublishedVersions";
})(SnapStartApplyOn || (SnapStartApplyOn = {}));
export var TracingMode;
(function (TracingMode) {
    TracingMode["Active"] = "Active";
    TracingMode["PassThrough"] = "PassThrough";
})(TracingMode || (TracingMode = {}));
export var LastUpdateStatus;
(function (LastUpdateStatus) {
    LastUpdateStatus["Failed"] = "Failed";
    LastUpdateStatus["InProgress"] = "InProgress";
    LastUpdateStatus["Successful"] = "Successful";
})(LastUpdateStatus || (LastUpdateStatus = {}));
export var LastUpdateStatusReasonCode;
(function (LastUpdateStatusReasonCode) {
    LastUpdateStatusReasonCode["DisabledKMSKey"] = "DisabledKMSKey";
    LastUpdateStatusReasonCode["EFSIOError"] = "EFSIOError";
    LastUpdateStatusReasonCode["EFSMountConnectivityError"] = "EFSMountConnectivityError";
    LastUpdateStatusReasonCode["EFSMountFailure"] = "EFSMountFailure";
    LastUpdateStatusReasonCode["EFSMountTimeout"] = "EFSMountTimeout";
    LastUpdateStatusReasonCode["EniLimitExceeded"] = "EniLimitExceeded";
    LastUpdateStatusReasonCode["FunctionError"] = "FunctionError";
    LastUpdateStatusReasonCode["ImageAccessDenied"] = "ImageAccessDenied";
    LastUpdateStatusReasonCode["ImageDeleted"] = "ImageDeleted";
    LastUpdateStatusReasonCode["InsufficientRolePermissions"] = "InsufficientRolePermissions";
    LastUpdateStatusReasonCode["InternalError"] = "InternalError";
    LastUpdateStatusReasonCode["InvalidConfiguration"] = "InvalidConfiguration";
    LastUpdateStatusReasonCode["InvalidImage"] = "InvalidImage";
    LastUpdateStatusReasonCode["InvalidRuntime"] = "InvalidRuntime";
    LastUpdateStatusReasonCode["InvalidSecurityGroup"] = "InvalidSecurityGroup";
    LastUpdateStatusReasonCode["InvalidStateKMSKey"] = "InvalidStateKMSKey";
    LastUpdateStatusReasonCode["InvalidSubnet"] = "InvalidSubnet";
    LastUpdateStatusReasonCode["InvalidZipFileException"] = "InvalidZipFileException";
    LastUpdateStatusReasonCode["KMSKeyAccessDenied"] = "KMSKeyAccessDenied";
    LastUpdateStatusReasonCode["KMSKeyNotFound"] = "KMSKeyNotFound";
    LastUpdateStatusReasonCode["SubnetOutOfIPAddresses"] = "SubnetOutOfIPAddresses";
})(LastUpdateStatusReasonCode || (LastUpdateStatusReasonCode = {}));
export var SnapStartOptimizationStatus;
(function (SnapStartOptimizationStatus) {
    SnapStartOptimizationStatus["Off"] = "Off";
    SnapStartOptimizationStatus["On"] = "On";
})(SnapStartOptimizationStatus || (SnapStartOptimizationStatus = {}));
export var State;
(function (State) {
    State["Active"] = "Active";
    State["Failed"] = "Failed";
    State["Inactive"] = "Inactive";
    State["Pending"] = "Pending";
})(State || (State = {}));
export var StateReasonCode;
(function (StateReasonCode) {
    StateReasonCode["Creating"] = "Creating";
    StateReasonCode["DisabledKMSKey"] = "DisabledKMSKey";
    StateReasonCode["EFSIOError"] = "EFSIOError";
    StateReasonCode["EFSMountConnectivityError"] = "EFSMountConnectivityError";
    StateReasonCode["EFSMountFailure"] = "EFSMountFailure";
    StateReasonCode["EFSMountTimeout"] = "EFSMountTimeout";
    StateReasonCode["EniLimitExceeded"] = "EniLimitExceeded";
    StateReasonCode["FunctionError"] = "FunctionError";
    StateReasonCode["Idle"] = "Idle";
    StateReasonCode["ImageAccessDenied"] = "ImageAccessDenied";
    StateReasonCode["ImageDeleted"] = "ImageDeleted";
    StateReasonCode["InsufficientRolePermissions"] = "InsufficientRolePermissions";
    StateReasonCode["InternalError"] = "InternalError";
    StateReasonCode["InvalidConfiguration"] = "InvalidConfiguration";
    StateReasonCode["InvalidImage"] = "InvalidImage";
    StateReasonCode["InvalidRuntime"] = "InvalidRuntime";
    StateReasonCode["InvalidSecurityGroup"] = "InvalidSecurityGroup";
    StateReasonCode["InvalidStateKMSKey"] = "InvalidStateKMSKey";
    StateReasonCode["InvalidSubnet"] = "InvalidSubnet";
    StateReasonCode["InvalidZipFileException"] = "InvalidZipFileException";
    StateReasonCode["KMSKeyAccessDenied"] = "KMSKeyAccessDenied";
    StateReasonCode["KMSKeyNotFound"] = "KMSKeyNotFound";
    StateReasonCode["Restoring"] = "Restoring";
    StateReasonCode["SubnetOutOfIPAddresses"] = "SubnetOutOfIPAddresses";
})(StateReasonCode || (StateReasonCode = {}));
export class InvalidCodeSignatureException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidCodeSignatureException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCodeSignatureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCodeSignatureException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export var ProvisionedConcurrencyStatusEnum;
(function (ProvisionedConcurrencyStatusEnum) {
    ProvisionedConcurrencyStatusEnum["FAILED"] = "FAILED";
    ProvisionedConcurrencyStatusEnum["IN_PROGRESS"] = "IN_PROGRESS";
    ProvisionedConcurrencyStatusEnum["READY"] = "READY";
})(ProvisionedConcurrencyStatusEnum || (ProvisionedConcurrencyStatusEnum = {}));
export class ProvisionedConcurrencyConfigNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ProvisionedConcurrencyConfigNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedConcurrencyConfigNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedConcurrencyConfigNotFoundException.prototype);
        this.Type = opts.Type;
    }
}
export var UpdateRuntimeOn;
(function (UpdateRuntimeOn) {
    UpdateRuntimeOn["Auto"] = "Auto";
    UpdateRuntimeOn["FunctionUpdate"] = "FunctionUpdate";
    UpdateRuntimeOn["Manual"] = "Manual";
})(UpdateRuntimeOn || (UpdateRuntimeOn = {}));
export class EC2AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "EC2AccessDeniedException",
            $fault: "server",
            ...opts,
        });
        this.name = "EC2AccessDeniedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, EC2AccessDeniedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class EC2ThrottledException extends __BaseException {
    constructor(opts) {
        super({
            name: "EC2ThrottledException",
            $fault: "server",
            ...opts,
        });
        this.name = "EC2ThrottledException";
        this.$fault = "server";
        Object.setPrototypeOf(this, EC2ThrottledException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class EC2UnexpectedException extends __BaseException {
    constructor(opts) {
        super({
            name: "EC2UnexpectedException",
            $fault: "server",
            ...opts,
        });
        this.name = "EC2UnexpectedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, EC2UnexpectedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
        this.EC2ErrorCode = opts.EC2ErrorCode;
    }
}
export class EFSIOException extends __BaseException {
    constructor(opts) {
        super({
            name: "EFSIOException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSIOException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSIOException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class EFSMountConnectivityException extends __BaseException {
    constructor(opts) {
        super({
            name: "EFSMountConnectivityException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSMountConnectivityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSMountConnectivityException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class EFSMountFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "EFSMountFailureException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSMountFailureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSMountFailureException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class EFSMountTimeoutException extends __BaseException {
    constructor(opts) {
        super({
            name: "EFSMountTimeoutException",
            $fault: "client",
            ...opts,
        });
        this.name = "EFSMountTimeoutException";
        this.$fault = "client";
        Object.setPrototypeOf(this, EFSMountTimeoutException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class ENILimitReachedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ENILimitReachedException",
            $fault: "server",
            ...opts,
        });
        this.name = "ENILimitReachedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ENILimitReachedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class InvalidRequestContentException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestContentException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestContentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestContentException.prototype);
        this.Type = opts.Type;
    }
}
export class InvalidRuntimeException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRuntimeException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidRuntimeException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidRuntimeException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class InvalidSecurityGroupIDException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSecurityGroupIDException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidSecurityGroupIDException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidSecurityGroupIDException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class InvalidSubnetIDException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidSubnetIDException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidSubnetIDException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidSubnetIDException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class InvalidZipFileException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidZipFileException",
            $fault: "server",
            ...opts,
        });
        this.name = "InvalidZipFileException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InvalidZipFileException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export var InvocationType;
(function (InvocationType) {
    InvocationType["DryRun"] = "DryRun";
    InvocationType["Event"] = "Event";
    InvocationType["RequestResponse"] = "RequestResponse";
})(InvocationType || (InvocationType = {}));
export var LogType;
(function (LogType) {
    LogType["None"] = "None";
    LogType["Tail"] = "Tail";
})(LogType || (LogType = {}));
export class KMSAccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSAccessDeniedException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSAccessDeniedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSAccessDeniedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class KMSDisabledException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSDisabledException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSDisabledException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSDisabledException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class KMSInvalidStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSInvalidStateException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSInvalidStateException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class KMSNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "KMSNotFoundException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSNotFoundException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSNotFoundException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class RequestTooLargeException extends __BaseException {
    constructor(opts) {
        super({
            name: "RequestTooLargeException",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestTooLargeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestTooLargeException.prototype);
        this.Type = opts.Type;
    }
}
export class ResourceNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotReadyException",
            $fault: "server",
            ...opts,
        });
        this.name = "ResourceNotReadyException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ResourceNotReadyException.prototype);
        this.Type = opts.Type;
    }
}
export class SnapStartException extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapStartException",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapStartException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapStartException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class SnapStartNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapStartNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapStartNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapStartNotReadyException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class SnapStartTimeoutException extends __BaseException {
    constructor(opts) {
        super({
            name: "SnapStartTimeoutException",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapStartTimeoutException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapStartTimeoutException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class SubnetIPAddressLimitReachedException extends __BaseException {
    constructor(opts) {
        super({
            name: "SubnetIPAddressLimitReachedException",
            $fault: "server",
            ...opts,
        });
        this.name = "SubnetIPAddressLimitReachedException";
        this.$fault = "server";
        Object.setPrototypeOf(this, SubnetIPAddressLimitReachedException.prototype);
        this.Type = opts.Type;
        this.Message = opts.Message;
    }
}
export class UnsupportedMediaTypeException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedMediaTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedMediaTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedMediaTypeException.prototype);
        this.Type = opts.Type;
    }
}
export var FunctionVersion;
(function (FunctionVersion) {
    FunctionVersion["ALL"] = "ALL";
})(FunctionVersion || (FunctionVersion = {}));
export const FunctionCodeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipFile && { ZipFile: SENSITIVE_STRING }),
});
export const EnvironmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Variables && { Variables: SENSITIVE_STRING }),
});
export const CreateFunctionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Code && { Code: FunctionCodeFilterSensitiveLog(obj.Code) }),
    ...(obj.Environment && { Environment: EnvironmentFilterSensitiveLog(obj.Environment) }),
});
export const EnvironmentErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: SENSITIVE_STRING }),
});
export const EnvironmentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Variables && { Variables: SENSITIVE_STRING }),
    ...(obj.Error && { Error: EnvironmentErrorFilterSensitiveLog(obj.Error) }),
});
export const ImageConfigErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: SENSITIVE_STRING }),
});
export const ImageConfigResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Error && { Error: ImageConfigErrorFilterSensitiveLog(obj.Error) }),
});
export const RuntimeVersionErrorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: SENSITIVE_STRING }),
});
export const RuntimeVersionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Error && { Error: RuntimeVersionErrorFilterSensitiveLog(obj.Error) }),
});
export const FunctionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Environment && { Environment: EnvironmentResponseFilterSensitiveLog(obj.Environment) }),
    ...(obj.ImageConfigResponse && {
        ImageConfigResponse: ImageConfigResponseFilterSensitiveLog(obj.ImageConfigResponse),
    }),
    ...(obj.RuntimeVersionConfig && {
        RuntimeVersionConfig: RuntimeVersionConfigFilterSensitiveLog(obj.RuntimeVersionConfig),
    }),
});
export const GetFunctionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Configuration && { Configuration: FunctionConfigurationFilterSensitiveLog(obj.Configuration) }),
});
export const InvocationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Payload && { Payload: SENSITIVE_STRING }),
});
export const InvocationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Payload && { Payload: SENSITIVE_STRING }),
});
export const InvokeAsyncRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListFunctionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Functions && { Functions: obj.Functions.map((item) => FunctionConfigurationFilterSensitiveLog(item)) }),
});
export const ListVersionsByFunctionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Versions && { Versions: obj.Versions.map((item) => FunctionConfigurationFilterSensitiveLog(item)) }),
});
export const LayerVersionContentInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipFile && { ZipFile: SENSITIVE_STRING }),
});
export const PublishLayerVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: LayerVersionContentInputFilterSensitiveLog(obj.Content) }),
});
export const UpdateFunctionCodeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ZipFile && { ZipFile: SENSITIVE_STRING }),
});
export const UpdateFunctionConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Environment && { Environment: EnvironmentFilterSensitiveLog(obj.Environment) }),
});
